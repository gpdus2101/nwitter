{"version":3,"sources":["fbase.js","routes/Auth.js","components/Nweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","toggleEditing","update","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","useEffect","collection","onSnapshot","snapshot","nweetArray","docs","map","fileRef","ref","child","uid","uuidv4","putString","response","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","src","width","height","creatorId","history","useHistory","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b90ec8d8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\r\n        />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue width Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue width Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    console.log(ok);\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { isCompositeComponent } from \"react-dom/test-utils\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [nweets, setNweets] = useState([]);\r\n  const [attachment, setAttachment] = useState();\r\n\r\n  // const getNweets = async () => {\r\n  //   const dbNweets = await dbService.collection(\"nweets\").get();\r\n  //   dbNweets.forEach((document) => {\r\n  //     const nweetObject = {\r\n  //       ...document.data(),\r\n  //       id: document.id,\r\n  //     };\r\n  //     setNweets((prev) => [nweetObject, ...prev]);\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // getNweets();\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const fileRef = storageService\r\n      .ref()\r\n      .child(`${userObj.uid}/${uuidv4()}`);\r\n    const response = await fileRef.putString(attachment, \"data_url\");\r\n    console.log(response);\r\n    // await dbService.collection(\"nweets\").add({\r\n    //   text: nweet,\r\n    //   createdAt: Date.now(),\r\n    //   creatorId: userObj.uid,\r\n    // });\r\n    // setNweet(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(null);\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n        <input type=\"submit\" value=\"Nweet\" />\r\n        {attachment && (\r\n          <div>\r\n            <img src={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearAttachment}>clear</button>\r\n          </div>\r\n        )}\r\n      </form>\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">My Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport \"css/style.css\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      //로그아웃 또는 어플리케이션이 초기화될 때 발생\n      if (user) {\n        // setIsLoggedIn(true);\n        setUserObj(user);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"fbase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}